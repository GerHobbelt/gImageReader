language: cpp
compiler: gcc
sudo: require
dist: xenial

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt595-xenial -y
  - sudo apt-get update -qq

install:
  - sudo apt-get -y install libgl-dev libopenjp2-7-dev libfontconfig-dev qt59base qt59tools qt59translations intltool libenchant-dev libleptonica-dev tesseract-ocr-dev libsane-dev libpodofo-dev libjpeg-dev libdjvulibre-dev intltool-debian libzip-dev uuid-dev libxml++2.6-dev libquazip5-dev libquazip5-headers # libpoppler-qt5-dev libqtspell-qt5-dev
  - source /opt/qt*/bin/qt*-env.sh

script:
  # Poppler
  - wget -c https://poppler.freedesktop.org/poppler-0.67.0.tar.xz
  - tar -xf poppler-*.tar.xz
  - cd poppler*/
  - mkdir build ; cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DTESTDATADIR=$PWD/testfiles -DENABLE_XPDF_HEADERS=ON
  - make -j$(nproc)
  - sudo make install
  - cd ../..
  # QtSpell
  - git clone https://github.com/manisandro/qtspell
  - cd qtspell
  - mkdir build ; cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
  - make -j$(nproc)
  - sudo make install
  - cd ../..
  # QuaZip
  - git clone https://github.com/stachenov/quazip
  - cd quazip
  - qmake PREFIX=/usr
  - sudo make install
  - cd ..
  # gImageReader
  - mkdir build ; cd build
  - cmake .. -DINTERFACE_TYPE=qt5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
  - make -j$(nproc)
  - make DESTDIR=appdir -j$(nproc) install ; find appdir/
  - mkdir -p ./appdir/usr/share/ ; cp -r /usr/share/tesseract-ocr ./appdir/usr/share/
  - cp ../packaging/AppImage/AppRun ./appdir/ ; chmod +x ./appdir/AppRun # For TESSDATA_PREFIX
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh gImageReader*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
